[tool.poetry]
name = "quantcrypt"
version = "0.0.7"
description = "Cross-platform Python library for Post-Quantum Cryptography using precompiled PQClean binaries of algorithms defined in the CNSA Suite"
authors = ["Mattias Aabmets <mattias.aabmets@gmail.com>"]
repository = "https://github.com/aabmets/quantcrypt"
license = "MIT"
readme = "README.md"
keywords = ["toolbox", "cross-language", "utility", "scripts", "software", "development"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: OS Independent",
    "Programming Language :: C",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: Security :: Cryptography",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries"
]
packages = [
    { include = "quantcrypt" }
]

[tool.poetry.scripts]
kupydo = "quantcrypt.internal.cli.main:app"

[tool.poetry.dependencies]
python = "^3.10"
orjson = "^3.9.10"
dotmap = "^1.3.30"
pydantic = "^2.5.3"
argon2-cffi = "^23.1.0"
pycryptodomex = "^3.19.1"
types-zxcvbn = "^4.4.1.6"
zxcvbn = "^4.4.28"
rich = "^13.7.0"
typer = {extras = ["all"], version = "^0.9.0"}

[tool.poetry.group.dev.dependencies]
cffi = "^1.16.0"
pyyaml = "^6.0.1"
setuptools = "^69.0.3"
devtools-cli = "^0.12.1"
coverage = "^7.4.0"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"

[tool.pytest.ini_options]
console_output_style = "count"
filterwarnings = ["ignore::DeprecationWarning"]
testpaths = ["tests"]
addopts = [
    "--cov=quantcrypt",
    "--cov-report=html",
    "--no-cov-on-fail",
    "--import-mode=append"
]
pythonpath = [
    ".",
    "./quantcrypt",
    "./quantcrypt/internal"
]

[tool.coverage.run]
branch = true
source = ["quantcrypt/*"]

[tool.coverage.report]
#fail_under = 90
skip_empty = true
ignore_errors = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "@abstractmethod"
]

[tool.coverage.html]
directory = ".htmlcov"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
